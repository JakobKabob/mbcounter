#!/usr/bin/env python3
import time
import psutil
import getopt
import sys
import os

notify_at = None
limit_at = None

argv = sys.argv[1:]

try: 
    opts, args = getopt.getopt(argv, "n:l:")
except:
    print('error')

for opt, arg in opts:
    if opt in ['-n']:
        notify_at = float(arg)
    elif opt in ['-l']:
        limit_at = float(arg)

class gc: 
    def __init__(self, notify_at, limit_at): 
        self.notify_at = notify_at
        self.limit_at = limit_at
        self.flags = '' 
        self.start_value = psutil.net_io_counters().bytes_sent + psutil.net_io_counters().bytes_recv
        self.mainloop()

    def mainloop(self):
        while True:
            new_value = psutil.net_io_counters().bytes_sent + psutil.net_io_counters().bytes_recv
            megabytes = self.bytes_to_MBs(new_value - self.start_value)

            print ("MB: %0.3f %s" % (megabytes, self.flags), end='\r')

            if self.notify_at is not None and megabytes >= notify_at:
                    self.flags += "\tPASSED NOTIFICATION LIMIT"
                    self.notify_at = None
            if self.limit_at is not None and megabytes >= limit_at:
                    os.system('echo "GC: I am not yet able to deactivate your internet connection"')
                    self.flags += "\tDISCONNECTED FROM THE INTERNET" 
                    self.limit_at = None

            time.sleep(1) 

    def bytes_to_MBs(self, value): 
        return value/1000/1000

a = gc(notify_at, limit_at)
